{kind: tab, spelling: "\t"}
{kind: newline, spelling: "\n"}
{kind: carriage_return, spelling: "\r"}
{kind: space, spelling: " "}
{kind: newline, spelling: "\n"}
{kind: identifier, spelling: "aA0-$..92"}
{kind: newline, spelling: "\n"}
{kind: identifier, spelling: "$php3.6"}
{kind: newline, spelling: "\n"}
{kind: integer, spelling: "0"}
{kind: newline, spelling: "\n"}
{kind: integer, spelling: "146"}
{kind: newline, spelling: "\n"}
{kind: integer, spelling: "0"}
{kind: identifier, spelling: "e"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "3.24e+1"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "3.42e+1"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "3e-10"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "0"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "4e+0"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "4e+0"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "4e+0"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "5e+0"}
{kind: newline, spelling: "\n"}
{kind: scientific, spelling: "7e+0"}
{kind: newline, spelling: "\n"}
{kind: string, spelling: "ప"}
{kind: newline, spelling: "\n"}
{kind: @, spelling: "@"}
{kind: newline, spelling: "\n"}
{kind: ~, spelling: "~"}
{kind: newline, spelling: "\n"}
{kind: =, spelling: "="}
{kind: newline, spelling: "\n"}
{kind: -, spelling: "-"}
{kind: newline, spelling: "\n"}
{kind: +, spelling: "+"}
{kind: newline, spelling: "\n"}
{kind: /, spelling: "/"}
{kind: newline, spelling: "\n"}
{kind: *=, spelling: "*="}
{kind: newline, spelling: "\n"}
{kind: ~=, spelling: "~="}
{kind: newline, spelling: "\n"}
{kind: ==, spelling: "=="}
{kind: newline, spelling: "\n"}
{kind: <<<, spelling: "<<<"}
{kind: newline, spelling: "\n"}
{kind: <<, spelling: "<<"}
{kind: newline, spelling: "\n"}
{kind: >>>, spelling: ">>>"}
{kind: newline, spelling: "\n"}
{kind: >>, spelling: ">>"}
{kind: newline, spelling: "\n"}
{kind: {, spelling: "{"}
{kind: newline, spelling: "\n"}
{kind: }, spelling: "}"}
{kind: newline, spelling: "\n"}
{kind: (, spelling: "("}
{kind: newline, spelling: "\n"}
{kind: ), spelling: ")"}
{kind: newline, spelling: "\n"}
{kind: [, spelling: "["}
{kind: newline, spelling: "\n"}
{kind: ], spelling: "]"}
{kind: newline, spelling: "\n"}
{kind: ., spelling: "."}
{kind: newline, spelling: "\n"}
{kind: hash_comment, spelling: " hheheheh  \r xլլ"}
{kind: eol_comment, spelling: " \r\r վհկվհհ"}
{kind: constructor, spelling: "constructor"}
{kind: newline, spelling: "\n"}
{kind: function, spelling: "function"}
{kind: newline, spelling: "\n"}
{kind: if-goto, spelling: "if-goto"}
{kind: newline, spelling: "\n"}
{kind: procedure, spelling: "procedure"}
{kind: newline, spelling: "\n"}
{kind: this, spelling: "this"}
{kind: newline, spelling: "\n"}
Read 88 tokens
